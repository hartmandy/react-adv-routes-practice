{"ast":null,"code":"var _jsxFileName = \"/Users/amandahartman/Downloads/12-adv-starting-project/frontend/src/routes/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  loader: async () => {\n    const response = await fetch(\"http://localhost:8080/events\");\n    if (!response.ok) {\n      return {\n        isError: true,\n        message: \"Could not fetch events\"\n      };\n    } else {\n      return response;\n    }\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","$RefreshReg$"],"sources":["/Users/amandahartman/Downloads/12-adv-starting-project/frontend/src/routes/EventsPage.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  const data = useLoaderData();\n  if (data.isError) {\n    return <p>{data.message}</p>;\n  }\n  const events = data.events;\n\n  return <EventsList events={events} />;\n}\n\nexport default EventsPage;\n\nexport async function loader() {\n  loader: async () => {\n    const response = await fetch(\"http://localhost:8080/events\");\n\n    if (!response.ok) {\n      return { isError: true, message: \"Could not fetch events\" };\n    } else {\n      return response;\n    }\n  };\n}\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAC5B,IAAIM,IAAI,CAACC,OAAO,EAAE;IAChB,oBAAOJ,OAAA;MAAAK,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9B;EACA,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;EAE1B,oBAAOX,OAAA,CAACF,UAAU;IAACa,MAAM,EAAEA;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACR,EAAA,CARQD,UAAU;EAAA,QACJJ,aAAa;AAAA;AAAAe,EAAA,GADnBX,UAAU;AAUnB,eAAeA,UAAU;AAEzB,OAAO,eAAeY,MAAMA,CAAA,EAAG;EAC7BA,MAAM,EAAE,YAAY;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,OAAO;QAAEZ,OAAO,EAAE,IAAI;QAAEE,OAAO,EAAE;MAAyB,CAAC;IAC7D,CAAC,MAAM;MACL,OAAOQ,QAAQ;IACjB;EACF,CAAC;AACH;AAAC,IAAAF,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}